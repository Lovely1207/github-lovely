
package com;
public class Main
{
public static void main (String args[])
  {
// Server server = new Tomcat ("Apache Tomcat");
// server.start ();

Server1 server1 = new Tomcat("Glassfish");
server1.shutdown();
System.out.println();
} 
}











package com;
class Server2 {
    
    void shutdown(){
        System.out.println("Shutdown from server3");
    }
}






package com;
interface Server1{
    
    public boolean start ();
    
    default void stop(){
        System.out.println("Stopping Server by interface.");
    }
    
    void refresh();
    
    default void shutdown(){
        System.out.println("Shutdown from Server1.");
    }
}








package com;
abstract class Server
{
protected final String name;
public Server (String name)
  {
this.name = name;
} 
public abstract boolean start ();

abstract void stop();
} 





package com;
class Tomcat extends Server,Server2 implements Server1
{
    
public Tomcat (String name)
{
super (name);
} 

@Override 
public boolean start ()
{
System.out.println (this.name + " started successfully");
return true;
}

@Override
  public void stop(){
    System.out.println("Stopping");
 }
 
 @Override
 public void refresh(){
    System.out.println("Refeshing....");
 }
 
 @Override
 void shutdown(){
     System.out.println("Shutdown....");
 }
}